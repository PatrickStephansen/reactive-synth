!function(e){var t={};function r(a){if(t[a])return t[a].exports;var o=t[a]={i:a,l:!1,exports:{}};return e[a].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,a){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(r.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(a,o,function(t){return e[t]}.bind(null,o));return a},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="./assets/audio-worklet-processors",r(r.s=0)}([function(e,t){registerProcessor("noise",class extends AudioWorkletProcessor{static get parameterDescriptors(){return[{name:"stepMax",defaultValue:1,minValue:0,maxValue:1,automationRate:"a-rate"},{name:"stepMin",defaultValue:0,minValue:0,maxValue:1,automationRate:"a-rate"},{name:"sampleHold",defaultValue:1,minValue:1,maxValue:1e6,automationRate:"a-rate"}]}constructor(){super(),this.previousValue=0,this.samplesHeld=0}process(e,t,r){let a=t[0],o=r.stepMin,u=o.length>1?e=>o[e]:()=>o[0],n=r.stepMax,s=n.length>1?e=>n[e]:()=>n[0],l=r.sampleHold,i=l.length>1?e=>l[e]:()=>l[0];for(let e=0;e<a[0].length;++e,++this.samplesHeld){const t=Math.random()*(s(e)-u(e))+u(e);let r;r=Math.random()>.5?this.previousValue+t>1?this.previousValue-t:this.previousValue+t:this.previousValue-t<-1?this.previousValue+t:this.previousValue-t,this.samplesHeld>=i(e)&&(this.samplesHeld=0,this.previousValue=r);for(let t=0;t<a.length;++t)a[t][e]=this.previousValue}return!0}})}]);