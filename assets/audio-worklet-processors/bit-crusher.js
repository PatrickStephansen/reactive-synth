!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="./assets/audio-worklet-processors",r(r.s=1)}([,function(e,t,r){"use strict";function n(e,t){t>32&&(t=32),t<1&&(t=1);const r=2/Math.floor(2**t),n=1-r;return e>=n?n:e<=-1?-1:Math.floor((1+e)/r)*r-1}r.r(t),registerProcessor("bit-crusher-fixed-point",class extends AudioWorkletProcessor{static get parameterDescriptors(){return[{name:"bitDepth",defaultValue:8,minValue:1,maxValue:32,automationRate:"a-rate"}]}process(e,t,r){let o=e[0],u=t[0],i=r.bitDepth,l=i.length>1?e=>i[e]:()=>i[0];for(let e=0;e<o.length;e++){const t=o[e],r=u[e];for(let e=0;e<t.length;e++){const o=t[e];r[e]=n(o,l(e))}}return!0}})}]);